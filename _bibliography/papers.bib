---
---

@inproceedings{10.1145/3465480.3466920,
author = {Martijn {de Heus} and Kyriakos Psarakis and Marios Fragkoulis and Asterios Katsifodimos},
title = {Distributed Transactions on Serverless Stateful Functions},
year = {2021},
abbr = {DEBS},
tag = {üèÜ Best Paper},
pdf = {https://dl-acm-org.tudelft.idm.oclc.org/doi/pdf/10.1145/3465480.3466920},
isbn = {9781450385558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi-org.tudelft.idm.oclc.org/10.1145/3465480.3466920},
doi = {10.1145/3465480.3466920},
abstract = {Serverless computing is currently the fastest-growing cloud services segment. The
most prominent serverless offering is Function-as-a-Service (FaaS), where users write
functions and the cloud automates deployment, maintenance, and scalability. Although
FaaS is a good fit for executing stateless functions, it does not adequately support
stateful constructs like microservices and scalable, low-latency cloud applications,
mainly because it lacks proper state management support and the ability to perform
function-to-function calls. Most importantly, executing transactions across stateful
functions remains an open problem.In this paper, we introduce a programming model
and implementation for transaction orchestration of stateful serverless functions.
Our programming model supports serializable distributed transactions with two-phase
commit, as well as relaxed transactional guarantees with Sagas. We design and implement
our programming model on Apache Flink StateFun. We choose to build our solution on
top of StateFun in order to leverage Flink's exactly-once processing and state management
guarantees. We base our evaluation on the YCSB benchmark, which we extended with transactional
operations and adapted for the SFaaS programming model. Our experiments show that
our transactional orchestration adds 10% overhead to the original system and that
Sagas can achieve up to 34% more transactions per second than two-phase commit transactions
at a sub-200ms latency.},
booktitle = {Proceedings of the 15th ACM International Conference on Distributed and Event-Based Systems},
pages = {31‚Äì42},
numpages = {12},
keywords = {two-phase commit, serverless, transactions, sagas, streaming dataflow, FaaS},
location = {Virtual Event, Italy},
series = {DEBS '21}
}

@inproceedings{9458921,
      author={Koutras, Christos and Siachamis, George and Ionescu, Andra and Psarakis, Kyriakos and Brons, Jerry and Fragkoulis, Marios and Lofi, Christoph and Bonifati, Angela and Katsifodimos, Asterios},
      booktitle={2021 IEEE 37th International Conference on Data Engineering (ICDE)},
      title={Valentine: Evaluating Matching Techniques for Dataset Discovery},
      year={2021},
      pages={468-479},
      abstract={Data scientists today search large data lakes to discover and integrate datasets. In order to bring together disparate data sources, dataset discovery methods rely on some form of schema matching: the process of establishing correspondences between datasets. Traditionally, schema matching has been used to find matching pairs of columns between a source and a target schema. However, the use of schema matching in dataset discovery methods differs from its original use. Nowadays schema matching serves as a building block for indicating and ranking inter-dataset relationships. Surprisingly, although a discovery method‚Äôs success relies highly on the quality of the underlying matching algorithms, the latest discovery methods employ existing schema matching algorithms in an ad-hoc fashion due to the lack of openly-available datasets with ground truth, reference method implementations, and evaluation metrics.In this paper, we aim to rectify the problem of evaluating the effectiveness and efficiency of schema matching methods for the specific needs of dataset discovery. To this end, we propose Valentine, an extensible open-source experiment suite to execute and organize large-scale automated matching experiments on tabular data. Valentine includes implementations of seminal schema matching methods that we either implemented from scratch (due to absence of open source code) or imported from open repositories. The contributions of Valentine are: i) the definition of four schema matching scenarios as encountered in dataset discovery methods, ii) a principled dataset fabrication process tailored to the scope of dataset discovery methods and iii) the most comprehensive evaluation of schema matching techniques to date, offering insight on the strengths and weaknesses of existing techniques, that can serve as a guide for employing schema matching in future dataset discovery methods.},
      doi={10.1109/ICDE51399.2021.00047},
      ISSN={2375-026X},
      month={April},
      abbr = {ICDE},
      pdf = {https://arxiv.org/pdf/2010.07386.pdf},
      arxiv = {arXiv:2010.07386},
      blog = {https://delftdata.github.io/valentine/},
}


@article{koutras2021valentine,
abbr = {VLDB},
tag = {Demo},
pdf = {http://vldb.org/pvldb/vol14/p2871-koutras.pdf},
author = {Koutras, Christos and Psarakis, Kyriakos and Siachamis, George and Ionescu, Andra and Fragkoulis, Marios and Bonifati, Angela and Katsifodimos, Asterios},
title = {Valentine in Action: Matching Tabular Data at Scale},
year = {2021},
issue_date = {July 2021},
publisher = {VLDB Endowment},
volume = {14},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/3476311.3476366},
doi = {10.14778/3476311.3476366},
abstract = {Capturing relationships among heterogeneous datasets in large data lakes - traditionally termed schema matching - is one of the most challenging problems that corporations and institutions face nowadays. Discovering and integrating datasets heavily relies on the effectiveness of the schema matching methods in use. However, despite the wealth of research, evaluation of schema matching methods is still a daunting task: there is a lack of openly-available datasets with ground truth, reference method implementations, and comprehensible GUIs that would facilitate development of both novel state-of-the-art schema matching techniques and novel data discovery methods.Our recently proposed Valentine is the first system to offer an open-source experiment suite to organize, execute and orchestrate large-scale matching experiments. In this demonstration we present its functionalities and enhancements: i) a scalable system, with a user-centric GUI, that enables the fabrication of datasets and the evaluation of matching methods on schema matching scenarios tailored to the scope of tabular dataset discovery, ii) a scalable holistic matching system that can receive tabular datasets from heterogeneous sources and provide with similarity scores among their columns, in order to facilitate modern procedures in data lakes, such as dataset discovery.},
journal = {Proc. VLDB Endow.},
month = {oct},
pages = {2871‚Äì2874},
numpages = {4}
}


@article{DEHEUS2022102015,
    abbr = {Inf. Syst.},
    tag = {Journal},
    pdf = {https://pdf.sciencedirectassets.com/271528/AIP/1-s2.0-S0306437922000229/main.pdf?X-Amz-Security-Token=IQoJb3JpZ2luX2VjEEYaCXVzLWVhc3QtMSJHMEUCIAWbkNORkTSngctLfQn8qwkO3lPA6kS9jEWsUXPCeA0dAiEAljRUBvgPGWfTmoo8%2FU2VijyxEXoaL99BjG75GyJPsT8qgwQIv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAEGgwwNTkwMDM1NDY4NjUiDFuKf%2BJmrmyQ79yg1irXA8xWDOk%2Fv2YctoarV3wgfzYNGJHo3B8L1qtB%2FJ%2BYavLN1OYtfAczevigzUy9JjwS8jDbs%2BMB2iOwebnqKg5eAYXpVylUZw7MTeAdfL8wvaTfsAF0fcuzRT5YXOU%2FnEsgnA7l%2FKeJS4IlQo8J7pdK%2BZ7cbVCJ%2FXGH1ho5ShqdkENxUEsO3pqyLV6Y2JbWp4XMDu7YDsA62Ua4Iqjx1ZIJ7gYRx6w2Z%2FL4bE0BTScUiec2KjTyKnZpBZBhMHmGtsiAvDna5fC01A%2B7IMpubXUgAG3z95W%2Bpk2DgY6NUCnnLIqWdKpWXAzaM1iLLrvu21daUgBu%2FNq4i1DOR1Gusqi49ufYUgmW%2F1Hw9bV%2F9tYWDBzfRFNk3baj9xZefCbLCfdvnWvheWyu8lkRqB5uJNeCIe5Lld8y6O5aVPZ8REMi2Y4GTIZrVguxtJoz1dmGeDWvNAzbbbZUdKQbLbVW8RyqaTIuFxmNDcSS47Be0%2BeC5XmyooyLkqocc%2FR1FJ5j52lbu8oP6O8a7a1F5Io7U%2BaYA8Z7JHlj872g8VmA6cfCmxtq6DWuXbiEGZvOcM%2F497M4ZMyihmC0tdcKnC9T91wjLHoC72PuNzKm%2BhZNdYAbHkUnvby5fok69zCFk9KRBjqlAX3zkUXmsWAWPlO9XF2gdCDX3IW%2FZHDiNZtmiQJRKVUT1kLRqgJUKpROcR%2BDhzFD4sVR%2B6YvOYchIjwaqGQIIuWTv9zaHb029CRnrpf%2FsHpXbg800bPxvpcOkM5z929fiAPX211C3y2%2FE1TPrwCXN4zYmF4EiLq0i7ZM0oc9zd0Vg%2FwtVAkSmA4zmBZQh0Oq4UZJNstee648tFbKC172HYqQ3mFLRA%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220318T151556Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIAQ3PHCVTYX4LE3XXS%2F20220318%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=505d9361b0cad5d164657ab0843e2b112c31f3ca8aaeaabc4afc7816ff9b436a&hash=90b58a350b683a7449e64480d7b94913f8b359b4698f92bab86ef413e7f6b373&host=68042c943591013ac2b2430a89b270f6af2c76d8dfd086a07176afe7c76c2c61&pii=S0306437922000229&tid=spdf-55441965-042a-4b78-9e4b-c2b8d1d0377f&sid=297485445c91b147b028a8e82780637b11c7gxrqb&type=client&download=true&ua=4c030a000a0a5d58045f5b&rr=6edeed36f99f9740},
    title = {Transactions across serverless functions leveraging stateful dataflows},
    journal = {Information Systems},
    volume = {108},
    pages = {102015},
    year = {2022},
    issn = {0306-4379},
    doi = {https://doi.org/10.1016/j.is.2022.102015},
    url = {https://www.sciencedirect.com/science/article/pii/S0306437922000229},
    author = {Martijn {de Heus} and Kyriakos Psarakis and Marios Fragkoulis and Asterios Katsifodimos},
    keywords = {Serverless, Transactions, FaaS, Two-phase commit, Sagas, Streaming dataflows},
    abstract = {Serverless computing is currently the fastest-growing cloud services segment. The most prominent serverless offering is Function-as-a-Service (FaaS), where users write functions and the cloud automates deployment, maintenance, and scalability. Although FaaS is a good fit for executing stateless functions, it does not adequately support stateful constructs like microservices and scalable, low-latency cloud applications. Recently, there have been multiple attempts to add first-class support for state in FaaS systems, such as Microsoft Orleans, Azure Durable Functions, or Beldi. These approaches execute business code inside stateless functions, handing over their state to an external database. In contrast, approaches such as Apache Flink‚Äôs StateFun follow a different design: a dataflow system such as Apache Flink handles all state management, messaging, and checkpointing by executing a stateful dataflow graph providing exactly-once state processing guarantees. This design relieves programmers from having to ‚Äúpollute‚Äù their business logic with distributed systems error checking, management, and mitigation. Although programmers can easily develop applications without worrying about messaging and state management, executing transactions across stateful functions remains an open problem. In this paper, we introduce a programming model and implementation for transaction orchestration of stateful serverless functions. Our programming model supports serializable distributed transactions with two-phase commit, as well as eventually consistent workflows with Sagas. We design and implement our programming model on Apache Flink StateFun to leverage Flink‚Äôs exactly-once processing and state management guarantees. Our experiments show that the approach of building transactional systems on top of dataflow graphs can achieve very high throughput, but with latency overhead due to checkpointing mechanism guaranteeing the exactly-once processing. We compare our approach to Beldi that implements two-phase commit on AWS lambda functions backed by DynamoDB for state management, as well as an implementation of a system that makes use of CockroachDB as its backend.}
}

@article{psarakis2021stateful,
  title={Stateful Entities: Object-oriented Cloud Applications as Distributed Dataflows},
  abbr = {CIDR},
  tag = {Abstract},
  journal = {CIDR},
  author={Psarakis, Kyriakos and Zorgdrager, Wouter and Fragkoulis, Marios and Salvaneschi, Guido and Katsifodimos, Asterios},
  pdf = {p70-katsifodimos.pdf},
  year={2023}
}

@article{ionescu2023topiodemo,
  title={Topio Marketplace: Search and Discovery of Geospatial Data},
  tag = {üèÜ Best Demo},
  abbr = {EDBT},
  journal = {EDBT},
  author={Ionescu, Andra and Alexandridou, Alexandra and Ikonomou, Leonidas and Psarakis, Kyriakos and Patroumpas, Kostas and Chatzigeorgakidis, Georgios and Skoutas, Dimitrios and Athanasiou, Spiros and Hai, Rihan and Katsifodimos, Asterios},
  pdf = {2023_EDBT_Topio_Demo.pdf},
  year={2023}
}

@InProceedings{10.1007/978-3-031-34444-2_25,
      abbr = {ICWE},
author="Ionescu, Andra
and Patroumpas, Kostas
and Psarakis, Kyriakos
and Chatzigeorgakidis, Georgios
and Collarana, Diego
and Barenscher, Kai
and Skoutas, Dimitrios
and Katsifodimos, Asterios
and Athanasiou, Spiros",
editor="Garrig{\'o}s, Irene
and Murillo Rodr{\'i}guez, Juan Manuel
and Wimmer, Manuel",
title="Topio: An¬†Open-Source Web Platform for¬†Trading Geospatial Data",
booktitle="Web Engineering",
year="2023",
publisher="Springer Nature Switzerland",
address="Cham",
pages="336--351",
abstract="The increasing need for data trading across businesses nowadays has created a demand for data marketplaces. However, despite the intentions of both data providers and consumers, today's data marketplaces remain mere data catalogs. We believe that marketplaces of the future require a set of value-added services, such as advanced search and discovery, that have been proposed in the database research community for years, but are not yet put to practice. With this paper, we report on the effort to engineer and develop an open-source modular data market platform to enable both entrepreneurs and researchers to setup and experiment with data marketplaces. To this end, we implemented and extended existing methods for data profiling, dataset search {\&} discovery, and data recommendation. These methods are available as open-source libraries. In this paper we report on how those tools were assembled together to build topio.market, a real-world web platform for trading geospatial data, that is currently in a beta phase.",
isbn="978-3-031-34444-2"
}

@inproceedings{10.1145/3583678.3596891,
          abbr = {DEBS},
author = {Siachamis, George and Psarakis, Kyriakos and Fragkoulis, Marios and Papapetrou, Odysseas and van Deursen, Arie and Katsifodimos, Asterios},
title = {Adaptive Distributed Streaming Similarity Joins},
year = {2023},
isbn = {9798400701221},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3583678.3596891},
doi = {10.1145/3583678.3596891},
abstract = {How can we perform similarity joins of multi-dimensional streams in a distributed fashion, achieving low latency? Can we adaptively repartition those streams in order to retain high performance under concept drifts? Current approaches to similarity joins are either restricted to single-node deployments or focus on set-similarity joins, failing to cover the ubiquitous case of metric-space similarity joins. In this paper, we propose the first adaptive distributed streaming similarity join approach that gracefully scales with variable velocity and distribution of multi-dimensional data streams. Our approach can adaptively rebalance the load of nodes in the case of concept drifts, allowing for similarity computations in the general metric space. We implement our approach on top of Apache Flink and evaluate its data partitioning and load balancing schemes on a set of synthetic datasets in terms of latency, comparisons ratio, and data duplication ratio.},
booktitle = {Proceedings of the 17th ACM International Conference on Distributed and Event-Based Systems},
pages = {25‚Äì36},
numpages = {12},
keywords = {data streams, distributed computations, similarity joins, load balancing, data partitioning},
location = {Neuchatel, Switzerland},
series = {DEBS '23}
}


@misc{psarakis2024styx,
      abbr = {Pre-print},
      tag = {Under Review},
      pdf = {https://arxiv.org/pdf/2312.06893.pdf},
      title={Styx: Transactional Stateful Functions on Streaming Dataflows},
      author={Kyriakos Psarakis and George Siachamis and George Christodoulou and Marios Fragkoulis and Asterios Katsifodimos},
      year={2024},
      eprint={2312.06893},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}


@inproceedings{psarakis2024stateful,
    abbr = {EDBT},
    tag = {Vision},
    pdf = {https://openproceedings.org/2024/conf/edbt/paper-11.pdf},
  title={Stateful Entities: Object-oriented Cloud Applications as Distributed Dataflows},
  author={Psarakis, Kyriakos and Zorgdrager, Wouter and Fragkoulis, Marios and Salvaneschi, Guido and Katsifodimos, Asterios},
  booktitle={27th International Conference on Extending Database Technology},
  pages={15--21},
  year={2024}
}

@misc{siachamis2024checkmate,
      abbr = {ICDE},
      pdf = {https://arxiv.org/pdf/2403.13629.pdf},
      title={CheckMate: Evaluating Checkpointing Protocols for Streaming Dataflows},
      author={George Siachamis and Kyriakos Psarakis and Marios Fragkoulis and Arie van Deursen and Paris Carbone and Asterios Katsifodimos},
      year={2024},
      eprint={2403.13629},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}

@article{psarakis2021stateful,
  title={Transactional Cloud Applications Go with the (Data)Flow},
  abbr = {CIDR},
  journal = {CIDR},
  author={Psarakis, Kyriakos and Christodoulou, George and Fragkoulis, Marios and Katsifodimos, Asterios},
  year={2025}
}